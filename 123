-- draw the entire UI
local function drawUI()
  pcall(function() if hasSetBg then monitor.setBackgroundColor(colors.black) end end)
  pcall(function() monitor.clear() end)

  for i, btn in ipairs(buttonGrid) do
    local ch = channels[i]
    local active = states[i]
    local bg = active and colors.green or colors.red

    -- draw button background
    fillRect(btn.x1, btn.y1, btn.x2 - btn.x1 + 1, btn.y2 - btn.y1 + 1, bg)

    -- prepare label (shortened if needed)
    local label = ch.name
    if active then
      label = label .. " [ON]"
    else
      label = label .. " [OFF]"
    end

    -- make sure it fits
    if #label > (btn.x2 - btn.x1 - 1) then
      label = string.sub(label, 1, (btn.x2 - btn.x1 - 3)) .. "â€¦"
    end

    -- center label horizontally
    local boxW = btn.x2 - btn.x1 + 1
    local boxH = btn.y2 - btn.y1 + 1
    local tx = btn.x1 + math.floor((boxW - #label) / 2)
    local ty = btn.y1 + math.floor(boxH / 2)

    -- draw label
    pcall(function()
      if hasSetTextCol then monitor.setTextColor(colors.white) end
      monitor.setCursorPos(tx, ty)
      monitor.write(label)
    end)
  end

  -- reset colors
  pcall(function() 
    if hasSetBg then monitor.setBackgroundColor(colors.black) end 
    if hasSetTextCol then monitor.setTextColor(colors.white) end
  end)
end
